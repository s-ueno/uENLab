<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:uEN.UI.AttachedProperties"
                    >


    <Style TargetType="DataGrid" BasedOn="{StaticResource {x:Type DataGrid}}">
        <Setter Property="Foreground"               Value="{DynamicResource AppForeground}"/>
        <Setter Property="FontFamily"               Value="{DynamicResource AppFont}"/>
        <Setter Property="FontSize"                 Value="{DynamicResource AppFontSize}"/>
        <Setter Property="Background"               Value="{DynamicResource DataGrid.Background}"/>
        <Setter Property="AlternatingRowBackground" Value="{DynamicResource DataGrid.AlternatingRowBackgroundBrush}" />
        <Setter Property="RowBackground"            Value="{DynamicResource DataGrid.RowBackgroundBrush}" />
        <Setter Property="BorderBrush"              Value="{DynamicResource DataGrid.BorderBrush}" />
        <Setter Property="BorderThickness"          Value="{DynamicResource DataGrid.BorderThickness}" />
        <Setter Property="GridLinesVisibility"      Value="None" />
        <Setter Property="CanUserDeleteRows"        Value="False" />
        <Setter Property="CanUserAddRows"           Value="False" />
        <Setter Property="CanUserResizeRows"        Value="False" />
        <Setter Property="AutoGenerateColumns"      Value="False" />
        <Setter Property="RowHeaderWidth"           Value="15" />
        <!--<Setter Property="ColumnWidth" Value="*" />-->
        <Style.Triggers>
            <Trigger Property="AutoGenerateColumns" Value="False">
                <Setter Property="RowBackground" Value="{DynamicResource DataGrid.RowBackgroundBrush}" />
                <Setter Property="AlternatingRowBackground" Value="{DynamicResource DataGrid.AlternatingRowBackgroundBrush}" />
            </Trigger>

        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type DataGrid}, ResourceId=DataGridSelectAllButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Button Background="{DynamicResource DataGrid.SelectAllButtonBackgroundBrush}" 
                            BorderThickness="0,0,0,1" 
                            BorderBrush="{DynamicResource DataGridColumnHeader.BorderBrush}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type DataGridRowHeader}" TargetType="DataGridRowHeader" BasedOn="{StaticResource {x:Type DataGridRowHeader}}">
        <Setter Property="Foreground" Value="{DynamicResource AppForeground}" />
        <Setter Property="Background" Value="{DynamicResource DataGridRowHeader.BackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource DataGridRowHeader.BorderBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource DataGridRowHeader.BorderThickness}" />
        <Setter Property="Margin" Value="0,-1,0,0" />
        <Style.Triggers>
            <Trigger Property="IsRowSelected" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border Background="{DynamicResource DataGridRowHeader.BackgroundBrush}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Polygon Points="0,0 6,5 0,10" Fill="Gray"/>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}},Path=IsEditing}" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Polygon Points="0,7 0,10 3,10 10,3 7,0"  Stroke="Gray" StrokeThickness="1" />
                                    <Polygon Points="0,7 0,10 3,10"  Fill="Gray" />
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{x:Type DataGridColumnHeader}" TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"></Condition>
                    <Condition Property="CanUserSort" Value="True"></Condition>
                </MultiTrigger.Conditions>
                <Setter Property="Cursor" Value="Hand"></Setter>
            </MultiTrigger>
        </Style.Triggers>

        <Setter Property="Background" Value="{DynamicResource DataGridColumnHeader.BackgroundBrush}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />

        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="2,3,3,3" />
        <Setter Property="BorderBrush" Value="{DynamicResource DataGridColumnHeader.BorderBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource DataGridColumnHeader.BorderThickness}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Border x:Name="BackgroundBorder" BorderThickness="{TemplateBinding BorderThickness}" 
                                                      Background="{TemplateBinding Background}" 
                                                      BorderBrush="{TemplateBinding BorderBrush}" >
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Grid.Column="0" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              />
                            <Path x:Name="SortArrow" Grid.Column="1" Fill="#F5F5F5" Stroke="#111111" StrokeThickness="0.3" Visibility="Collapsed" Data="M0,0 L1,0 0.5,1 z" Stretch="Fill" Width="8" Height="6" Margin="1,0,1,0" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.4" />
                            <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Width="5" Opacity="0" Cursor="SizeWE" />
                            <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Width="5" Opacity="0" Cursor="SizeWE"  />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                            <Setter TargetName="SortArrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="DisplayIndex" Value="0">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_LeftHeaderGripper" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type DataGridCell}" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
        <Setter Property="BorderBrush" Value="{DynamicResource DataGridCell.BorderBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource DataGridCell.BorderThickness}" />
        <Style.Triggers>           
            <Trigger Property="IsReadOnly" Value="false">
                <Setter Property="Background" Value="{DynamicResource DataGridCell.IsReadOnlyBackground}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource DataGridCell.SelectedForegroundBrush}" />
                <Setter Property="Background" Value="{DynamicResource DataGridCell.SelectedBackgroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>