<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    >
    <Style x:Key="FlatButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground"                   Value="{DynamicResource AppForeground}"/>
        <Setter Property="FontFamily"                   Value="{DynamicResource AppFont}"/>
        <Setter Property="FontSize"                     Value="{DynamicResource AppFontSize}"/>
        <Setter Property="Background"                   Value="{DynamicResource Button.Background}"/>
        <Setter Property="BorderBrush"                  Value="{DynamicResource Button.Border}"/>
        <Setter Property="FocusVisualStyle"             Value="{x:Null}"/>
        <Setter Property="BorderThickness"              Value="1,1,1,1"/>
        <Setter Property="HorizontalContentAlignment"   Value="Center"/>
        <Setter Property="VerticalContentAlignment"     Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter" 
                                          ContentTemplate="{TemplateBinding ContentTemplate}" 
                                          Content="{TemplateBinding Content}" 
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                          Focusable="False" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" 
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource AppForegroundDisabled}"/>
                            <Setter Property="Background" Value="{DynamicResource AppDisabled}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Button.BackgroundHover}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource Button.BorderHover}"/>
                            <Setter Property="Foreground" Value="{DynamicResource Button.TextHover}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Button.BackgroundPressed}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource Button.BorderPressed}"/>
                            <Setter Property="Foreground" Value="{DynamicResource Button.TextPressed}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource AppBrand}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernButtonStyle" TargetType="{x:Type Button}" >
        <Setter Property="Foreground"                   Value="{DynamicResource AppBrand}" />
        <Setter Property="FontFamily"                   Value="{DynamicResource AppFont}"/>
        <Setter Property="FontSize"                     Value="{DynamicResource AppFontSize}"/>
 
        <Setter Property="FocusVisualStyle"             Value="{x:Null}"/>
        <Setter Property="HorizontalContentAlignment"   Value="Center"/>
        <Setter Property="VerticalContentAlignment"     Value="Center"/>
        <Setter Property="Focusable"                    Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock Name="chrome" 
                               HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                               VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <ContentPresenter />
                    </TextBlock>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"   Value="true" />
                                <Condition Property="IsEnabled"     Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="chrome" Property="TextBlock.TextDecorations" Value="Underline" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource AppForegroundDisabled}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="TitleButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource FlatButtonStyle}">
        <Setter Property="Foreground"                   Value="{DynamicResource AppForeground}"/>
        <Setter Property="FontFamily"                   Value="Marlett"/>
        <Setter Property="Background"                   Value="Transparent" />
        <Setter Property="BorderThickness"              Value="0" />
        <Setter Property="FontSize"                     Value="15"  />
        <Setter Property="Padding"                      Value="5" />
        <Setter Property="FocusVisualStyle"             Value="{x:Null}"/>
        <Setter Property="HorizontalContentAlignment"   Value="Center"/>
        <Setter Property="VerticalContentAlignment"     Value="Center"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter" 
                                          ContentTemplate="{TemplateBinding ContentTemplate}" 
                                          Content="{TemplateBinding Content}" 
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                          Focusable="False" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" 
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource AppForegroundDisabled}"/>
                            <Setter Property="Background" Value="{DynamicResource AppDisabled}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Button.BackgroundHover}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource Button.BorderHover}"/>
                            <Setter Property="Foreground" Value="{DynamicResource Button.TextHover}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Button.BackgroundPressed}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource Button.BorderPressed}"/>
                            <Setter Property="Foreground" Value="{DynamicResource Button.TextPressed}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource AppBrand}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"   Value="true" />
                                <Condition Property="IsPressed"     Value="false" />
                                <Condition Property="Content"       Value="r" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Red"/>
                            <Setter Property="Foreground" Value="White"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="EllipseButtonStyle" TargetType="{x:Type Button}" >
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Padding"          Value="7"       />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Ellipse x:Name="ellipse"
                                     Stroke="{TemplateBinding BorderBrush}"
                                     Fill="Transparent"
                                     StrokeThickness="{TemplateBinding BorderThickness}"
                                     VerticalAlignment="Stretch" >
                        </Ellipse>
                        <ContentPresenter Name="content" Margin="{TemplateBinding Padding}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ellipse" Property="Stroke" Value="OrangeRed"/>
                            <Setter TargetName="ellipse" Property="Fill" >
                                <Setter.Value>
                                    <SolidColorBrush Color="OrangeRed" Opacity="0.5"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



</ResourceDictionary>