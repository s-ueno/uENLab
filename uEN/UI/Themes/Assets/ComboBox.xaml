<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

  
    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="BorderBrush" Value="{DynamicResource ComboBox.Static.Border}" />
        <Setter Property="Background"  Value="{DynamicResource ComboBox.Static.Background}" />
        <Setter Property="IsChecked" Value="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="20" />
                        </Grid.ColumnDefinitions>

                        <Border x:Name="outerBorder" Grid.ColumnSpan="2"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                BorderThickness="1" />
                        <Border x:Name="buttonBorder" Grid.Column="1"
                                BorderBrush="Transparent"
                                Background="{TemplateBinding Background}"
                                BorderThickness="1" >
                            <Viewbox Margin="5">
                                <Path Stretch="Fill" 
                                      Fill="{DynamicResource ComboBox.Static.Glyph}" 
                                      Data="M 0 0 L 4 4 L 8 0 Z"
                                      />
                            </Viewbox>
                        </Border>
                    </Grid> 
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="outerBorder" Property="Background"  Value="{DynamicResource ComboBox.MouseOver.Background}" />
                            <Setter TargetName="outerBorder" Property="BorderBrush" Value="{DynamicResource ComboBox.MouseOver.Border}"     />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="outerBorder" Property="Background"  Value="{DynamicResource ComboBox.MouseOver.Background}" />
                            <Setter TargetName="outerBorder" Property="BorderBrush" Value="{DynamicResource ComboBox.MouseOver.Border}"     />
                        </Trigger>
                        <Trigger SourceName="buttonBorder" Property="IsMouseOver" Value="True">
                            <Setter TargetName="buttonBorder" Property="Background"  Value="{DynamicResource ComboBox.MouseOver.Background}" />
                            <Setter TargetName="buttonBorder" Property="BorderBrush" Value="{DynamicResource ComboBox.MouseOver.Border}"     />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="{Binding Background, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Foreground" Value="{Binding Foreground, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="IsReadOnly" Value="{Binding IsReadOnly, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="Margin" Value="1,1,20,1" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment"   Value="Stretch" />
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" 
                                      HorizontalScrollBarVisibility="Hidden" 
                                      VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource TextBox.SelectionBrush}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Border"
                          Padding="3"
                          SnapsToDevicePixels="true"
                          Background="Transparent">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" TargetName="Border" Value="{DynamicResource ComboBox.MouseOver.Background}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Border" Value="{DynamicResource ComboBox.MouseOver.Background}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" TargetName="Border" Value="{DynamicResource ComboBox.Selected.Background}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}"  >
        <Setter Property="Foreground"                               Value="{DynamicResource AppForeground}" />
        <Setter Property="Background"                               Value="{DynamicResource ComboBox.Static.Background}" />
        <Setter Property="BorderBrush"                              Value="{DynamicResource ComboBox.Static.Border}" />
        <Setter Property="FocusVisualStyle"                         Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels"                      Value="true" />
        <Setter Property="OverridesDefaultStyle"                    Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"   Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll"            Value="true" />
        <Setter Property="MinWidth"                                 Value="120" />
        <Setter Property="MinHeight"                                Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>                        
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />                                
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation 
                                              Storyboard.TargetProperty="Opacity" AutoReverse="False"
                                              From="1" To="0.4" Duration="0:0:3" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="EditStates">
                                <VisualState x:Name="Editable">
                                    <Storyboard>                                        
                                        <ObjectAnimationUsingKeyFrames 
                                                Storyboard.TargetProperty="(UIElement.Visibility)"
                                                Storyboard.TargetName="PART_EditableTextBox">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                                Storyboard.TargetProperty="(UIElement.Visibility)"
                                                Storyboard.TargetName="ContentSite">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Uneditable" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        
                        <ToggleButton x:Name="ToggleButton"  
                                      Style="{DynamicResource ComboBoxToggleButton}" />
                        <ContentPresenter x:Name="ContentSite"
                                IsHitTestVisible="False"
                                Margin="2"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                />
                        <TextBox x:Name="PART_EditableTextBox"
                                Style="{DynamicResource ComboBoxTextBox}"
                                Visibility="Hidden"
                                Padding="2"
                                 />
                        <Popup x:Name="Popup" Grid.ColumnSpan="2"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True"
                               Focusable="False"
                               PopupAnimation="Slide">
                            <Grid x:Name="DropDown"
                                    SnapsToDevicePixels="True"
                                    MinWidth="{TemplateBinding ActualWidth}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                        BorderThickness="1"
                                        BorderBrush="{DynamicResource ComboBox.Static.Border}"
                                        Background="{DynamicResource WindowTheme}"
                                        />
                                <ScrollViewer 
                                        SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True"
                                        KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0" />
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="ToggleButton" Value="{DynamicResource ComboBox.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger SourceName="PART_EditableTextBox" Property="IsFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="ToggleButton" Value="{DynamicResource ComboBox.MouseOver.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>